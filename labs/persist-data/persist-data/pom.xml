<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>persist-data</artifactId>
  <packaging>war</packaging>
  <name>Persist Data web app Project</name>
  <description>This is the persist-data project</description>
  <parent>
<!--   	<groupId>com.redhat.training</groupId>
  	<artifactId>parent-pom</artifactId>
  	<version>1.0</version>
  	<relativePath>../../pom.xml</relativePath> -->
        <groupId>org.jboss</groupId>
        <artifactId>jboss-parent</artifactId>
	<version>37</version>	 
  </parent>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	  
	<!-- Explicitly declaring the source encoding eliminates the following
	message: -->
	<!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered
	resources, i.e. build is platform dependent! -->
	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	
	<!-- JBoss dependency versions -->
	
	<version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>
	
	<!-- Define the version of the JBoss BOMs we want to import to specify tested stacks. -->
	<!--
	  <version.jboss.bom.eap>7.0.2.GA</version.jboss.bom.eap>
	  -->
<!-- 	<version>7.4.0.GA</version> -->

        <version.server.bom>7.4.9.GA</version.server.bom>
	  
	<!-- other plug-in versions -->
	<version.surefire.plugin>2.10</version.surefire.plugin>
	<version.war.plugin>3.3.2</version.war.plugin>
	
	<!-- maven-compiler-plugin -->
	<maven.compiler.target>1.8</maven.compiler.target>
	<maven.compiler.source>1.8</maven.compiler.source>
  </properties>

    <dependencyManagement>
        <dependencies>
            <!-- importing the jakartaee8-with-tools BOM adds specs and other useful artifacts as managed dependencies -->
            <dependency>
                <groupId>org.jboss.bom</groupId>
                <artifactId>jboss-eap-jakartaee8-with-tools</artifactId>
                <version>${version.server.bom}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
	
    <profiles>
        <profile>
            <!-- When built in OpenShift the 'openshift' profile will be
                used when invoking mvn. -->
            <!-- Use this profile for any OpenShift specific customization
                your app will ne    ed. -->
            <id>openshift</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-war-plugin</artifactId>
                        <configuration>
                            <warName>ROOT</warName>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <repositories>
        <repository>
            <id>jboss-enterprise-maven-repository</id>
            <name>JBoss Enterprise Maven Repository</name>
            <url>https://maven.repository.redhat.com/ga/</url>
        </repository>
        <repository>
            <id>jboss-public-repository-group</id>
            <name>JBoss Public Repository Group</name>
            <url>https://repository.jboss.org/nexus/content/groups/public</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>jboss-enterprise-maven-repository</id>
            <name>JBoss Enterprise Maven Repository</name>
            <url>https://maven.repository.redhat.com/ga/</url>
        </pluginRepository>
        <pluginRepository>
            <id>jboss-public-repository-group</id>
            <name>JBoss Public Repository Group</name>
            <url>https://repository.jboss.org/nexus/content/groups/public</url>
        </pluginRepository>
    </pluginRepositories>
    <!-- Copy from C:\GitRep\SampleProject\Red Hat\@GitRep\eap7-with-postgres\pom.xml -->
	
    <dependencies>
	<!-- ・Fatal error compiling: java.lang.NoClassDefFoundError: javax/xml/bind/JAXBException: javax.xml.bind.JAXBException
	　https://www.google.com/search?q=+Fatal+error+compiling%3A+java.lang.NoClassDefFoundError%3A+javax%2Fxml%2Fbind%2FJAXBException%3A+javax.xml.bind.JAXBException&sca_esv=dcdc2d0f0896c7ba&rlz=1C1GCEU_jaJP985JP985&sxsrf=ACQVn09ber_pArv8J_cAcnE7BaV0aKgNUQ%3A1708760110633&ei=LpzZZeOmJtzj1e8Pp7-6wAE&ved=0ahUKEwjj9Zm7u8OEAxXccfUHHaefDhgQ4dUDCBA&uact=5&oq=+Fatal+error+compiling%3A+java.lang.NoClassDefFoundError%3A+javax%2Fxml%2Fbind%2FJAXBException%3A+javax.xml.bind.JAXBException&gs_lp=Egxnd3Mtd2l6LXNlcnAiciBGYXRhbCBlcnJvciBjb21waWxpbmc6IGphdmEubGFuZy5Ob0NsYXNzRGVmRm91bmRFcnJvcjogamF2YXgveG1sL2JpbmQvSkFYQkV4Y2VwdGlvbjogamF2YXgueG1sLmJpbmQuSkFYQkV4Y2VwdGlvbkgAUABYAHAAeACQAQCYAQCgAQCqAQC4AQPIAQD4AQGYAgCgAgCYAwCSBwA&sclient=gws-wiz-serp
	・java.lang.ClassNotFoundException: javax.xml.bind.JAXBException と来た時の対応
	　https://qiita.com/ukiuni@github/items/bf6b14e9aa1090ec4a75
	・java.lang.ClassNotFoundException: javax.xml.bind.DatatypeConverterエラーがでる
	　https://qiita.com/Sicut_study/items/01a2ba9dd45aa464054f
	・【Java】解決！NoClassDefFoundError: javax/xml/bind/JAXBExceptionの対処方法
	　https://tech.omablo.com/archives/1270
	・java.lang.NoClassDefFoundError を解決する方法: javax/xml/bind/JAXBException
	　https://stackoverflow.com/questions/43574426/how-to-resolve-java-lang-noclassdeffounderror-javax-xml-bind-jaxbexception	 -->
	<dependency>
	    <groupId>javax.xml.bind</groupId>
	    <artifactId>jaxb-api</artifactId>
	    <version>2.3.0</version>
	</dependency>
        <!-- First declare the APIs we depend on and need for compilation. All
            of them are provided by JBoss EAP -->

        <!-- Import the CDI API, we use provided scope as the API is included in
            JBoss EAP -->
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the Common Annotations API (JSR-250), we use provided scope
            as the API is included in JBoss EAP -->
	<!-- https://central.sonatype.com/artifact/org.jboss.spec.javax.annotation/jboss-annotations-api_1.2_spec -->
	<dependency>
	    <groupId>org.jboss.spec.javax.annotation</groupId>
	    <artifactId>jboss-annotations-api_1.2_spec</artifactId>
	    <version>1.0.2.Final</version>
            <scope>provided</scope>
	</dependency>
	    
        <!-- Import the JAX-RS API, we use provided scope as the API is included
            in JBoss EAP -->
	<!-- https://central.sonatype.com/artifact/org.jboss.spec.javax.ws.rs/jboss-jaxrs-api_2.0_spec -->
	<dependency>
	    <groupId>org.jboss.spec.javax.ws.rs</groupId>
	    <artifactId>jboss-jaxrs-api_2.0_spec</artifactId>
	    <version>1.0.1.Final</version>
	    <scope>provided</scope>
	</dependency>

        <!-- Import the JPA API, we use provided scope as the API is included in
            JBoss EAP -->
	<dependency>
	    <groupId>jakarta.persistence</groupId>
	    <artifactId>jakarta.persistence-api</artifactId>
	    <version>2.2.3</version>
            <scope>provided</scope>
	</dependency>

        <!-- Annotation processor that raising compilation errors whenever constraint
            annotations are incorrectly used. -->
	<!--  https://central.sonatype.com/artifact/org.hibernate/hibernate-validator-annotation-processor -->
	<!-- 5.2.4.Final-redhat-1 -->
	<!-- https://repo1.maven.org/maven2/org/hibernate/hibernate-validator-annotation-processor/5.4.1.Final/ -->
	<dependency>
	    <groupId>org.hibernate</groupId>
	    <artifactId>hibernate-validator-annotation-processor</artifactId>
	    <version>5.2.4.Final-redhat-1</version>
	    <scope>provided</scope>
	</dependency>
	    
        <!-- Import the EJB API, we use provided scope as the API is included in
            JBoss EAP -->
        <dependency>
            <groupId>org.jboss.spec.javax.ejb</groupId>
            <artifactId>jboss-ejb-api_3.2_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.spec.javax.jms</groupId>
            <artifactId>jboss-jms-api_2.0_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Bean Validation Implementation -->
        <!-- Provides portable constraints such as @Email -->
        <!-- Hibernate Validator is shipped in JBoss EAP -->
	<dependency>
	    <groupId>org.hibernate</groupId>
	    <artifactId>hibernate-validator</artifactId>
	    <version>5.2.4.Final</version>
	    <scope>provided</scope>
		    <exclusions>
			<exclusion>
			    <groupId>org.slf4j</groupId>
				    <artifactId>slf4j-api</artifactId>
			</exclusion>
		    </exclusions>
	</dependency>
	    
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-search-orm</artifactId>
                <scope>provided</scope>
            </dependency>

             <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-entitymanager</artifactId>
                <scope>provided</scope>
            </dependency>

        <!-- Import the JSF API, we use provided scope as the API is included in
            JBoss EAP -->
	<!-- https://central.sonatype.com/artifact/org.jboss.spec.javax.faces/jboss-jsf-api_2.2_spec -->
	<dependency>
	    <groupId>org.jboss.spec.javax.faces</groupId>
	    <artifactId>jboss-jsf-api_2.2_spec</artifactId>
	    <version>2.2.14</version>
	    <scope>provided</scope>
	</dependency>

	<!--  https://central.sonatype.com/artifact/org.jboss.spec.javax.servlet/jboss-servlet-api_3.1_spec -->
	<dependency>
	    <groupId>org.jboss.spec.javax.servlet</groupId>
	    <artifactId>jboss-servlet-api_3.1_spec</artifactId>
	    <version>1.0.2.Final</version>
	    <scope>provided</scope>
	</dependency>

        <!-- Annotation processor to generate the JPA metamodel classes for
            typesafe criteria queries -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-jpamodelgen</artifactId>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>persist-data</finalName>
        <plugins>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.3.2</version>
                <extensions>false</extensions>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <archive>
                        <manifestEntries>
                            <Dependencies>com.google.guava,org.slf4j
                            </Dependencies>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
