<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>persist-data</artifactId>
  <packaging>war</packaging>
  <name>Persist Data web app Project</name>
  <description>This is the persist-data project</description>
  <parent>
  	<groupId>com.redhat.training</groupId>
  	<artifactId>parent-pom</artifactId>
  	<version>1.0</version>
  	<relativePath>../pom.xml</relativePath>
  </parent>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

    <dependencies>
	<!-- ・Fatal error compiling: java.lang.NoClassDefFoundError: javax/xml/bind/JAXBException: javax.xml.bind.JAXBException
	　https://www.google.com/search?q=+Fatal+error+compiling%3A+java.lang.NoClassDefFoundError%3A+javax%2Fxml%2Fbind%2FJAXBException%3A+javax.xml.bind.JAXBException&sca_esv=dcdc2d0f0896c7ba&rlz=1C1GCEU_jaJP985JP985&sxsrf=ACQVn09ber_pArv8J_cAcnE7BaV0aKgNUQ%3A1708760110633&ei=LpzZZeOmJtzj1e8Pp7-6wAE&ved=0ahUKEwjj9Zm7u8OEAxXccfUHHaefDhgQ4dUDCBA&uact=5&oq=+Fatal+error+compiling%3A+java.lang.NoClassDefFoundError%3A+javax%2Fxml%2Fbind%2FJAXBException%3A+javax.xml.bind.JAXBException&gs_lp=Egxnd3Mtd2l6LXNlcnAiciBGYXRhbCBlcnJvciBjb21waWxpbmc6IGphdmEubGFuZy5Ob0NsYXNzRGVmRm91bmRFcnJvcjogamF2YXgveG1sL2JpbmQvSkFYQkV4Y2VwdGlvbjogamF2YXgueG1sLmJpbmQuSkFYQkV4Y2VwdGlvbkgAUABYAHAAeACQAQCYAQCgAQCqAQC4AQPIAQD4AQGYAgCgAgCYAwCSBwA&sclient=gws-wiz-serp
	・java.lang.ClassNotFoundException: javax.xml.bind.JAXBException と来た時の対応
	　https://qiita.com/ukiuni@github/items/bf6b14e9aa1090ec4a75
	・java.lang.ClassNotFoundException: javax.xml.bind.DatatypeConverterエラーがでる
	　https://qiita.com/Sicut_study/items/01a2ba9dd45aa464054f
	・【Java】解決！NoClassDefFoundError: javax/xml/bind/JAXBExceptionの対処方法
	　https://tech.omablo.com/archives/1270
	・java.lang.NoClassDefFoundError を解決する方法: javax/xml/bind/JAXBException
	　https://stackoverflow.com/questions/43574426/how-to-resolve-java-lang-noclassdeffounderror-javax-xml-bind-jaxbexception	 -->
	<dependency>
	    <groupId>javax.xml.bind</groupId>
	    <artifactId>jaxb-api</artifactId>
	    <version>2.3.0</version>
	</dependency>
        <!-- First declare the APIs we depend on and need for compilation. All
            of them are provided by JBoss EAP -->

        <!-- Import the CDI API, we use provided scope as the API is included in
            JBoss EAP -->
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the Common Annotations API (JSR-250), we use provided scope
            as the API is included in JBoss EAP -->
        <dependency>
            <groupId>org.jboss.spec.javax.annotation</groupId>
            <artifactId>jboss-annotations-api_1.2_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the JAX-RS API, we use provided scope as the API is included
            in JBoss EAP -->
        <dependency>
            <groupId>org.jboss.spec.javax.ws.rs</groupId>
            <artifactId>jboss-jaxrs-api_2.0_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the JPA API, we use provided scope as the API is included in
            JBoss EAP -->
        <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.1-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the EJB API, we use provided scope as the API is included in
            JBoss EAP -->
        <dependency>
            <groupId>org.jboss.spec.javax.ejb</groupId>
            <artifactId>jboss-ejb-api_3.2_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.spec.javax.jms</groupId>
            <artifactId>jboss-jms-api_2.0_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Bean Validation Implementation -->
        <!-- Provides portable constraints such as @Email -->
        <!-- Hibernate Validator is shipped in JBoss EAP -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-search-orm</artifactId>
                 <scope>provided</scope>
            </dependency>

             <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-entitymanager</artifactId>
                 <scope>provided</scope>
            </dependency>

        <!-- Import the JSF API, we use provided scope as the API is included in
            JBoss EAP -->
        <dependency>
            <groupId>org.jboss.spec.javax.faces</groupId>
            <artifactId>jboss-jsf-api_2.2_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
	  		<groupId>org.jboss.spec.javax.servlet</groupId>
	  		<artifactId>jboss-servlet-api_3.1_spec</artifactId>
			<scope>provided</scope>
	  	</dependency>

        <!-- Annotation processor to generate the JPA metamodel classes for
            typesafe criteria queries -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-jpamodelgen</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Annotation processor that raising compilation errors whenever constraint
            annotations are incorrectly used. -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator-annotation-processor</artifactId>
            <scope>provided</scope>
        </dependency>

    </dependencies>

    <build>
        <finalName>persist-data</finalName>
        <plugins>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>${version.war.plugin}</version>
                <extensions>false</extensions>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <archive>
                        <manifestEntries>
                            <Dependencies>com.google.guava,org.slf4j
                            </Dependencies>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
